#***********************************************************************
#
# Makefile for FEHM
#
#***********************************************************************
# Usage: gmake -f Makefile.fehm [FLAGS] [TARGET]
#
# Command line flags: BIT (Linux only), DEBUG
#   BIT=32      PGI 32 bit compiler (default)
#   BIT=64	PGI 64 bit compiler
#   DEBUG=OFF	Compile without -g flag (default)
#   DEBUG=ON    Compile with -g, -C flags
#***********************************************************************
# GNU Make version 3.79.1 or later should be used
# gmake (make) should be executed form the directory where the objects 
# will reside.
# Edit SRCDIR to point to the directory where the source code is located
# Edit FC,LIBRARY,FFLAGS for your environment and compiler 
#***********************************************************************
# Before starting source GnuDevelEnv.cshrc
CURRENTDIR := $(PWD)
FEHMDIR = ${CURRENTDIR}/..
SRCDIR = ${FEHMDIR}/src/
TPLDIR = ${FEHMDIR}/TPL
export PETSC_DIR=${TPLDIR}/petsc-release/petsc
WORKDIR = ./
INCDIR = ./ -I${PETSC_DIR}/include/ -I${PETSC_DIR}/${PETSC_ARCH}/include/
OBJDIR = ./
DEPEND = ${SRCDIR}Makefile.depends

OPSYS = UNKNOWN
BIT = 64
STATIC =
OPSYS_FULL = $(shell uname -a )
OPSYS = $(shell uname -s )
DATETAG = $(shell date '+%y-%m-%d')

ifeq (${DEBUG}, ON)
DATE = dbg
else
DATE = $(shell date '+.%d%b%y')
endif

# Linux OS ------------------------------
ifeq (${OPSYS}, Linux)
OSTAG = lnUbuntu16
ifeq (${BIT},64)
FC = ${PETSC_DIR}/${PETSC_ARCH}/bin/mpif90
LIBRARY =  -L ${PETSC_DIR}/${PETSC_ARCH}/lib/ -lpetsc -Wl,-rpath,${PETSC_DIR}/${PETSC_ARCH}/lib/
else
OSTAG = macOS
FC = ${PETSC_DIR}/${PETSC_ARCH}/bin/mpif90
LIBRARY =  -L ${PETSC_DIR}/${PETSC_ARCH}/lib/ -lpetsc -Wl,-rpath,${PETSC_DIR}/${PETSC_ARCH}/lib/
endif
DFLAG =
LD = ld
ifeq (${DEBUG}, ON)
#FFLAGS = -g -frecord-marker=4 -fno-automatic -ffpe-trap=underflow,overflow
#FFLAGS = -g -frecord-marker=4 -fno-automatic
FFLAGS = -g -frecord-marker=4 -fbounds-check
else
FFLAGS = -O2 -frecord-marker=4 -fno-automatic 
#You might want that flag below, wierd stuff happening when its on man
#-ffpe-trap=underflow,overflow
#FFLAGS = -O2 -frecord-marker=4
#FFLAGS = -g -frecord-marker=4 -fbounds-check
endif
#STATIC = -Bstatic
STATIC = 
endif
# Linux OS ------------------------------

# SUN OS ------------------------------
ifeq (${OPSYS}, SunOS)
OSTAG = sun
#FC = tau_f90.sh
#LIBRARY = -L/usr/lanl/packages/gcc42/lib
#FC = /n/local_SunOS/studio11/SUNWspro/bin/f90
LD = /usr/ccs/bin/ld
#LIBRARY = -L/n/local_SunOS/studio11/SUNWspro/lib
DFLAG =
ifeq (${DEBUG}, ON)
FFLAGS = -g -C
else
FFLAGS = -O1 -xtarget=ultra2
endif
#STATIC = -Bstatic
STATIC = 
endif
# SUN OS ------------------------------

OSTAG = macOS
FC = ${PETSC_DIR}/${PETSC_ARCH}/bin/mpif90
LIBRARY =  -L ${PETSC_DIR}/${PETSC_ARCH}/lib/ -lpetsc -Wl,-rpath,${PETSC_DIR}/${PETSC_ARCH}/lib/
OBJECTS := $(patsubst ${SRCDIR}%.f,%.o,$(wildcard ${SRCDIR}*.f))
OBJECTS_cap := $(patsubst ${SRCDIR}%.F,%.o,$(wildcard ${SRCDIR}*.F))
OBJECTS_F90 := $(patsubst ${SRCDIR}%.f90,%.o,$(wildcard ${SRCDIR}*.f90))
OBJECTS_F90_cap := $(patsubst ${SRCDIR}%.F90,%.o,$(wildcard ${SRCDIR}*.F90))
OBJECTS_NEW := $(patsubst ${SRCDIR}src_new/%.f,%.o,$(wildcard ${SRCDIR}src_new/*.f))
OBJECTS_NEW_cap := $(patsubst ${SRCDIR}src_new/%.F,%.o,$(wildcard ${SRCDIR}src_new/*.F))
OBJECTS_NEW_F90 := $(patsubst ${SRCDIR}src_new/%.f90,%.o,$(wildcard ${SRCDIR}src_new/*.f90))
OBJECTS_NEW_F90_cap := $(patsubst ${SRCDIR}src_new/%.F90,%.o,$(wildcard ${SRCDIR}src_new/*.F90))

all: petsc-release dated xfehm

.PHONY: petsc-release
petsc-release:
	@rm -R  ${TPLDIR}/petsc-release/petsc/
	@cd ${TPLDIR}/petsc-release && git clone https://github.com/petsc/petsc.git
	@cd ${TPLDIR}/petsc-release/petsc/ && git branch && ./configure -with-cc=gcc --with-cxx=g++ --with-fc=gfortran --download-mpich --download-fblaslapack --with-debugging=0
	@cd ${TPLDIR}/petsc-release/petsc/ && make
dated:
	rm -f  ${SRCDIR}dated.f
	sed s/OS\ DATE/${OSTAG}\ ${DATETAG}/ ${SRCDIR}dated.template >  ${SRCDIR}dated.f

xfehm : ${OBJECTS} ${OBJECTS_cap} ${OBJECTS_F90} ${OBJECTS_F90_cap} ${OBJECTS_NEW} ${OBJECTS_NEW_cap} ${OBJECTS_NEW_F90} ${OBJECTS_NEW_F90_cap}
	${FC} ${FFLAGS} ${OBJECTS} ${OBJECTS_cap} ${OBJECTS_F90} ${OBJECTS_F90_cap} ${OBJECTS_NEW} ${OBJECTS_NEW_cap} ${OBJECTS_NEW_F90} ${OBJECTS_NEW_F90_cap} ${LIBRARY} ${STATIC} -o xfehm_v3.3.1${OSTAG}${DATE}

test:
	echo ${OSTAG} ${FFLAGS} ${DATETAG} ${DATE}

%.mod : ${SRCDIR}%.f
	${FC} ${DFLAG} ${FFLAGS} $< -c

%.o : ${SRCDIR}%.f
	${FC} ${DFLAG} ${INCDIR} ${FFLAGS} $< -c

%.o : ${SRCDIR}%.f90
	${FC} ${DFLAG} ${INCDIR} ${FFLAGS} $< -c

%.o : ${SRCDIR}%.F90
	${FC} ${DFLAG} ${INCDIR} ${FFLAGS} $< -c

# Modifications for gfortran
# gfortran does not support 'binary'
inrestart.o : ${SRCDIR}GFORTRAN/inrestart.f
	${FC} ${DFLAG} ${FFLAGS} $< -c

insptr.o :  ${SRCDIR}GFORTRAN/insptr.f
	${FC} ${DFLAG} ${FFLAGS} $< -c

# Modifications in src_modified
#fehmn.o : ${SRCDIR}src_modified/fehmn.f
#	${FC} ${DFLAG} ${FFLAGS} $< -c

clean :
	rm -f *.o *.mod

include ${DEPEND}
